/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.public_.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.public_.tables.Crumb;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CrumbRecord extends UpdatableRecordImpl<CrumbRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.CRUMB.LINE</code>.
     */
    public void setLine(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.CRUMB.LINE</code>.
     */
    public Integer getLine() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CRUMB.TIMESTAMP</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.CRUMB.TIMESTAMP</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>PUBLIC.CRUMB.THREAD</code>.
     */
    public void setThread(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.CRUMB.THREAD</code>.
     */
    public String getThread() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.CRUMB.PATTERN</code>.
     */
    public void setPattern(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.CRUMB.PATTERN</code>.
     */
    public String getPattern() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.CRUMB.REQ</code>.
     */
    public void setReq(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.CRUMB.REQ</code>.
     */
    public String getReq() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.CRUMB.RESP</code>.
     */
    public void setResp(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.CRUMB.RESP</code>.
     */
    public String getResp() {
        return (String) get(5);
    }

    /**
     * Setter for <code>PUBLIC.CRUMB.URL</code>.
     */
    public void setUrl(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.CRUMB.URL</code>.
     */
    public String getUrl() {
        return (String) get(6);
    }

    /**
     * Setter for <code>PUBLIC.CRUMB.STACKFRAME</code>.
     */
    public void setStackframe(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>PUBLIC.CRUMB.STACKFRAME</code>.
     */
    public String getStackframe() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CrumbRecord
     */
    public CrumbRecord() {
        super(Crumb.CRUMB);
    }

    /**
     * Create a detached, initialised CrumbRecord
     */
    public CrumbRecord(Integer line, LocalDateTime timestamp, String thread, String pattern, String req, String resp, String url, String stackframe) {
        super(Crumb.CRUMB);

        setLine(line);
        setTimestamp(timestamp);
        setThread(thread);
        setPattern(pattern);
        setReq(req);
        setResp(resp);
        setUrl(url);
        setStackframe(stackframe);
        resetChangedOnNotNull();
    }
}
